name: Build & Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (e.g., 1.0.0)'
        required: true

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check if tag exists
        run: |
          if git rev-parse "${{ github.event.inputs.version }}" >/dev/null 2>&1; then
            echo "❌ Tag ${{ github.event.inputs.version }} already exists. Exiting."
            exit 1
          fi

      - name: Setup Node.js and enable pnpm
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: |
          pnpm build
          git add -f dist

      - name: Set version
        run: |
          echo "Setting version to ${{ github.event.inputs.version }}"
          pnpm version ${{ github.event.inputs.version }} --no-git-tag-version
          git add package.json

      - name: Clean files for release
        run: |
          set -e

            FILES=$(node -p "require('./package.json').files?.join(' ') ?? ''")
            echo "Keeping: $FILES"
            # Add mandatory files manually
            KEEP="package.json README.md LICENSE .git $FILES"
            # Create rsync includes
            INCLUDE=$(for file in $KEEP; do echo "--include=$file"; done)
            echo "Included patterns:"
            echo "$INCLUDE"

            mkdir safe
            for file in $KEEP; do
              if [ -e "$file" ]; then
                echo "✅ Keeping $file"
                mkdir -p "safe/$(dirname "$file")"
                cp -r "$file" "safe/$file"
              else
                echo "⚠️  File $file not found, skipping"
              fi
            done

            # Clean current directory
            find . -mindepth 1 -maxdepth 1 ! -name safe -exec rm -rf {} +

            # Move kept files back
            shopt -s dotglob nullglob
            mv safe/* ./
            rmdir safe || true

            git add .

      - name: Create commit & tag
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git commit -m "${{ github.event.inputs.version }}" || echo "No changes to commit"
          git tag ${{ github.event.inputs.version }}
          git push origin ${{ github.event.inputs.version }}
          git reset --soft HEAD~1  # Undo commit but keep changes staged

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          body: "Automated release of ${{ github.event.inputs.version }}"
          generate_release_notes: true
          make_latest: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
