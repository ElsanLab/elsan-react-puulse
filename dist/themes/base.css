/*! tailwindcss v4.1.4 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --ep-font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --ep-color-black: #000;
    --ep-color-white: #fff;
    --ep-spacing: 0.25rem;
    --ep-container-sm: 24rem;
    --ep-container-lg: 32rem;
    --ep-text-xs: 0.75rem;
    --ep-text-xs--line-height: calc(1 / 0.75);
    --ep-text-sm: 0.875rem;
    --ep-text-sm--line-height: calc(1.25 / 0.875);
    --ep-text-base: 1rem;
    --ep-text-base--line-height: calc(1.5 / 1);
    --ep-text-lg: 1.125rem;
    --ep-text-lg--line-height: calc(1.75 / 1.125);
    --ep-font-weight-normal: 400;
    --ep-font-weight-medium: 500;
    --ep-font-weight-semibold: 600;
    --ep-tracking-tight: -0.025em;
    --ep-tracking-widest: 0.1em;
    --ep-leading-relaxed: 1.625;
    --ep-radius-xs: 0.125rem;
    --ep-ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --ep-default-transition-duration: 150ms;
    --ep-default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --ep-default-font-family: var(--sans);
    --ep-default-mono-font-family: var(--ep-font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--ep-default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--ep-default-font-feature-settings, normal);
    font-variation-settings: var(--ep-default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--ep-default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--ep-default-mono-font-feature-settings, normal);
    font-variation-settings: var(--ep-default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .ep\:pointer-events-none {
    pointer-events: none;
  }
  .ep\:invisible {
    visibility: hidden;
  }
  .ep\:sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  .ep\:absolute {
    position: absolute;
  }
  .ep\:fixed {
    position: fixed;
  }
  .ep\:relative {
    position: relative;
  }
  .ep\:inset-0 {
    inset: calc(var(--ep-spacing) * 0);
  }
  .ep\:inset-x-0 {
    inset-inline: calc(var(--ep-spacing) * 0);
  }
  .ep\:inset-y-0 {
    inset-block: calc(var(--ep-spacing) * 0);
  }
  .ep\:top-0 {
    top: calc(var(--ep-spacing) * 0);
  }
  .ep\:top-1\/2 {
    top: calc(1/2 * 100%);
  }
  .ep\:top-4 {
    top: calc(var(--ep-spacing) * 4);
  }
  .ep\:top-\[50\%\] {
    top: 50%;
  }
  .ep\:right-0 {
    right: calc(var(--ep-spacing) * 0);
  }
  .ep\:right-4 {
    right: calc(var(--ep-spacing) * 4);
  }
  .ep\:bottom-0 {
    bottom: calc(var(--ep-spacing) * 0);
  }
  .ep\:left-0 {
    left: calc(var(--ep-spacing) * 0);
  }
  .ep\:left-1\/2 {
    left: calc(1/2 * 100%);
  }
  .ep\:left-\[50\%\] {
    left: 50%;
  }
  .ep\:z-50 {
    z-index: 50;
  }
  .ep\:col-start-2 {
    grid-column-start: 2;
  }
  .ep\:-mx-1 {
    margin-inline: calc(var(--ep-spacing) * -1);
  }
  .ep\:mx-6 {
    margin-inline: calc(var(--ep-spacing) * 6);
  }
  .ep\:mx-10 {
    margin-inline: calc(var(--ep-spacing) * 10);
  }
  .ep\:mx-auto {
    margin-inline: auto;
  }
  .ep\:mt-2 {
    margin-top: calc(var(--ep-spacing) * 2);
  }
  .ep\:mt-4 {
    margin-top: calc(var(--ep-spacing) * 4);
  }
  .ep\:mt-6 {
    margin-top: calc(var(--ep-spacing) * 6);
  }
  .ep\:mt-8 {
    margin-top: calc(var(--ep-spacing) * 8);
  }
  .ep\:mt-auto {
    margin-top: auto;
  }
  .ep\:-mr-2 {
    margin-right: calc(var(--ep-spacing) * -2);
  }
  .ep\:mr-2 {
    margin-right: calc(var(--ep-spacing) * 2);
  }
  .ep\:mb-2 {
    margin-bottom: calc(var(--ep-spacing) * 2);
  }
  .ep\:mb-6 {
    margin-bottom: calc(var(--ep-spacing) * 6);
  }
  .ep\:ml-auto {
    margin-left: auto;
  }
  .ep\:line-clamp-1 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1;
  }
  .ep\:flex {
    display: flex;
  }
  .ep\:grid {
    display: grid;
  }
  .ep\:hidden {
    display: none;
  }
  .ep\:inline-flex {
    display: inline-flex;
  }
  .ep\:aspect-square {
    aspect-ratio: 1 / 1;
  }
  .ep\:size-2\.5 {
    width: calc(var(--ep-spacing) * 2.5);
    height: calc(var(--ep-spacing) * 2.5);
  }
  .ep\:size-3\.5 {
    width: calc(var(--ep-spacing) * 3.5);
    height: calc(var(--ep-spacing) * 3.5);
  }
  .ep\:size-4 {
    width: calc(var(--ep-spacing) * 4);
    height: calc(var(--ep-spacing) * 4);
  }
  .ep\:size-7 {
    width: calc(var(--ep-spacing) * 7);
    height: calc(var(--ep-spacing) * 7);
  }
  .ep\:size-8 {
    width: calc(var(--ep-spacing) * 8);
    height: calc(var(--ep-spacing) * 8);
  }
  .ep\:size-9 {
    width: calc(var(--ep-spacing) * 9);
    height: calc(var(--ep-spacing) * 9);
  }
  .ep\:size-10 {
    width: calc(var(--ep-spacing) * 10);
    height: calc(var(--ep-spacing) * 10);
  }
  .ep\:size-full {
    width: 100%;
    height: 100%;
  }
  .ep\:h-2\.5 {
    height: calc(var(--ep-spacing) * 2.5);
  }
  .ep\:h-4 {
    height: calc(var(--ep-spacing) * 4);
  }
  .ep\:h-7 {
    height: calc(var(--ep-spacing) * 7);
  }
  .ep\:h-8 {
    height: calc(var(--ep-spacing) * 8);
  }
  .ep\:h-9 {
    height: calc(var(--ep-spacing) * 9);
  }
  .ep\:h-10 {
    height: calc(var(--ep-spacing) * 10);
  }
  .ep\:h-72 {
    height: calc(var(--ep-spacing) * 72);
  }
  .ep\:h-\[calc\(100\%-1px\)\] {
    height: calc(100% - 1px);
  }
  .ep\:h-auto {
    height: auto;
  }
  .ep\:h-full {
    height: 100%;
  }
  .ep\:h-px {
    height: 1px;
  }
  .ep\:max-h-\[300px\] {
    max-height: 300px;
  }
  .ep\:min-h-4 {
    min-height: calc(var(--ep-spacing) * 4);
  }
  .ep\:min-h-9\! {
    min-height: calc(var(--ep-spacing) * 9) !important;
  }
  .ep\:w-2\.5 {
    width: calc(var(--ep-spacing) * 2.5);
  }
  .ep\:w-3\/4 {
    width: calc(3/4 * 100%);
  }
  .ep\:w-4 {
    width: calc(var(--ep-spacing) * 4);
  }
  .ep\:w-6 {
    width: calc(var(--ep-spacing) * 6);
  }
  .ep\:w-7 {
    width: calc(var(--ep-spacing) * 7);
  }
  .ep\:w-8 {
    width: calc(var(--ep-spacing) * 8);
  }
  .ep\:w-9 {
    width: calc(var(--ep-spacing) * 9);
  }
  .ep\:w-72 {
    width: calc(var(--ep-spacing) * 72);
  }
  .ep\:w-\[300px\] {
    width: 300px;
  }
  .ep\:w-\[400px\] {
    width: 400px;
  }
  .ep\:w-auto {
    width: auto;
  }
  .ep\:w-fit {
    width: fit-content;
  }
  .ep\:w-full {
    width: 100%;
  }
  .ep\:w-max {
    width: max-content;
  }
  .ep\:w-px {
    width: 1px;
  }
  .ep\:max-w-\[calc\(100\%-2rem\)\] {
    max-width: calc(100% - 2rem);
  }
  .ep\:min-w-0 {
    min-width: calc(var(--ep-spacing) * 0);
  }
  .ep\:flex-1 {
    flex: 1;
  }
  .ep\:shrink-0 {
    flex-shrink: 0;
  }
  .ep\:origin-\(--radix-popover-content-transform-origin\) {
    transform-origin: var(--radix-popover-content-transform-origin);
  }
  .ep\:origin-\(--radix-tooltip-content-transform-origin\) {
    transform-origin: var(--radix-tooltip-content-transform-origin);
  }
  .ep\:-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .ep\:translate-x-\[-50\%\] {
    --tw-translate-x: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .ep\:-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .ep\:translate-y-\[-50\%\] {
    --tw-translate-y: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .ep\:translate-y-\[calc\(-50\%_-_2px\)\] {
    --tw-translate-y: calc(-50% - 2px);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .ep\:rotate-45 {
    rotate: 45deg;
  }
  .ep\:animate-caret-blink {
    animation: caret-blink 1.25s ease-out infinite;
  }
  .ep\:cursor-default {
    cursor: default;
  }
  .ep\:cursor-not-allowed\! {
    cursor: not-allowed !important;
  }
  .ep\:touch-none {
    touch-action: none;
  }
  .ep\:scroll-py-1 {
    scroll-padding-block: calc(var(--ep-spacing) * 1);
  }
  .ep\:grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
  .ep\:grid-cols-\[0_1fr\] {
    grid-template-columns: 0 1fr;
  }
  .ep\:flex-col {
    flex-direction: column;
  }
  .ep\:flex-col-reverse {
    flex-direction: column-reverse;
  }
  .ep\:flex-row {
    flex-direction: row;
  }
  .ep\:items-center {
    align-items: center;
  }
  .ep\:items-start {
    align-items: flex-start;
  }
  .ep\:justify-center {
    justify-content: center;
  }
  .ep\:justify-start {
    justify-content: flex-start;
  }
  .ep\:justify-items-start {
    justify-items: start;
  }
  .ep\:gap-1 {
    gap: calc(var(--ep-spacing) * 1);
  }
  .ep\:gap-1\.5 {
    gap: calc(var(--ep-spacing) * 1.5);
  }
  .ep\:gap-2 {
    gap: calc(var(--ep-spacing) * 2);
  }
  .ep\:gap-3 {
    gap: calc(var(--ep-spacing) * 3);
  }
  .ep\:gap-4 {
    gap: calc(var(--ep-spacing) * 4);
  }
  .ep\:space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--ep-spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--ep-spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .ep\:gap-x-2 {
    column-gap: calc(var(--ep-spacing) * 2);
  }
  .ep\:gap-x-4 {
    column-gap: calc(var(--ep-spacing) * 4);
  }
  .ep\:space-x-2 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--ep-spacing) * 2) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--ep-spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .ep\:gap-y-0\.5 {
    row-gap: calc(var(--ep-spacing) * 0.5);
  }
  .ep\:gap-y-2 {
    row-gap: calc(var(--ep-spacing) * 2);
  }
  .ep\:truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .ep\:overflow-hidden {
    overflow: hidden;
  }
  .ep\:overflow-hidden\! {
    overflow: hidden !important;
  }
  .ep\:overflow-x-hidden {
    overflow-x: hidden;
  }
  .ep\:overflow-y-auto {
    overflow-y: auto;
  }
  .ep\:rounded-\[2px\] {
    border-radius: 2px;
  }
  .ep\:rounded-\[4px\] {
    border-radius: 4px;
  }
  .ep\:rounded-\[inherit\] {
    border-radius: inherit;
  }
  .ep\:rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .ep\:rounded-lg {
    border-radius: var(--radius);
  }
  .ep\:rounded-md {
    border-radius: calc(var(--radius) - 2px);
  }
  .ep\:rounded-md\! {
    border-radius: calc(var(--radius) - 2px) !important;
  }
  .ep\:rounded-sm {
    border-radius: calc(var(--radius) - 4px);
  }
  .ep\:rounded-xs {
    border-radius: var(--ep-radius-xs);
  }
  .ep\:rounded-s-lg {
    border-start-start-radius: var(--radius);
    border-end-start-radius: var(--radius);
  }
  .ep\:rounded-s-md {
    border-start-start-radius: calc(var(--radius) - 2px);
    border-end-start-radius: calc(var(--radius) - 2px);
  }
  .ep\:rounded-s-none {
    border-start-start-radius: 0;
    border-end-start-radius: 0;
  }
  .ep\:rounded-e-md {
    border-start-end-radius: calc(var(--radius) - 2px);
    border-end-end-radius: calc(var(--radius) - 2px);
  }
  .ep\:rounded-e-none {
    border-start-end-radius: 0;
    border-end-end-radius: 0;
  }
  .ep\:border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .ep\:border\! {
    border-style: var(--tw-border-style) !important;
    border-width: 1px !important;
  }
  .ep\:border-y {
    border-block-style: var(--tw-border-style);
    border-block-width: 1px;
  }
  .ep\:border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .ep\:border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }
  .ep\:border-r-0 {
    border-right-style: var(--tw-border-style);
    border-right-width: 0px;
  }
  .ep\:border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .ep\:border-l {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }
  .ep\:border-destructive-light-foreground\/20 {
    border-color: var(--destructive-light-foreground);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--destructive-light-foreground) 20%, transparent);
    }
  }
  .ep\:border-info-light-foreground\/20 {
    border-color: var(--info-light-foreground);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--info-light-foreground) 20%, transparent);
    }
  }
  .ep\:border-input {
    border-color: var(--input);
  }
  .ep\:border-input\! {
    border-color: var(--input) !important;
  }
  .ep\:border-neutral-light-foreground\/20 {
    border-color: var(--neutral-light-foreground);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--neutral-light-foreground) 20%, transparent);
    }
  }
  .ep\:border-primary-light-foreground\/20 {
    border-color: var(--primary-light-foreground);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--primary-light-foreground) 20%, transparent);
    }
  }
  .ep\:border-success-light-foreground\/20 {
    border-color: var(--success-light-foreground);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--success-light-foreground) 20%, transparent);
    }
  }
  .ep\:border-transparent {
    border-color: transparent;
  }
  .ep\:border-warning-light-foreground\/20 {
    border-color: var(--warning-light-foreground);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--warning-light-foreground) 20%, transparent);
    }
  }
  .ep\:border-t-transparent {
    border-top-color: transparent;
  }
  .ep\:border-l-transparent {
    border-left-color: transparent;
  }
  .ep\:bg-accent {
    background-color: var(--accent);
  }
  .ep\:bg-background {
    background-color: var(--background);
  }
  .ep\:bg-black\/50 {
    background-color: var(--ep-color-black);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--ep-color-black) 50%, transparent);
    }
  }
  .ep\:bg-border {
    background-color: var(--border);
  }
  .ep\:bg-card {
    background-color: var(--card);
  }
  .ep\:bg-destructive {
    background-color: var(--destructive);
  }
  .ep\:bg-destructive-light {
    background-color: var(--destructive-light);
  }
  .ep\:bg-foreground {
    background-color: var(--foreground);
  }
  .ep\:bg-info-light {
    background-color: var(--info-light);
  }
  .ep\:bg-muted {
    background-color: var(--muted);
  }
  .ep\:bg-muted\! {
    background-color: var(--muted) !important;
  }
  .ep\:bg-neutral {
    background-color: var(--neutral);
  }
  .ep\:bg-neutral-light {
    background-color: var(--neutral-light);
  }
  .ep\:bg-popover {
    background-color: var(--popover);
  }
  .ep\:bg-popover\! {
    background-color: var(--popover) !important;
  }
  .ep\:bg-primary {
    background-color: var(--primary);
  }
  .ep\:bg-primary-light {
    background-color: var(--primary-light);
  }
  .ep\:bg-primary-light\! {
    background-color: var(--primary-light) !important;
  }
  .ep\:bg-secondary {
    background-color: var(--secondary);
  }
  .ep\:bg-success-light {
    background-color: var(--success-light);
  }
  .ep\:bg-transparent {
    background-color: transparent;
  }
  .ep\:bg-transparent\! {
    background-color: transparent !important;
  }
  .ep\:bg-warning-light {
    background-color: var(--warning-light);
  }
  .ep\:fill-neutral {
    fill: var(--neutral);
  }
  .ep\:fill-primary {
    fill: var(--primary);
  }
  .ep\:p-0 {
    padding: calc(var(--ep-spacing) * 0);
  }
  .ep\:p-1 {
    padding: calc(var(--ep-spacing) * 1);
  }
  .ep\:p-3 {
    padding: calc(var(--ep-spacing) * 3);
  }
  .ep\:p-4 {
    padding: calc(var(--ep-spacing) * 4);
  }
  .ep\:p-6 {
    padding: calc(var(--ep-spacing) * 6);
  }
  .ep\:p-\[3px\] {
    padding: 3px;
  }
  .ep\:p-px {
    padding: 1px;
  }
  .ep\:px-2 {
    padding-inline: calc(var(--ep-spacing) * 2);
  }
  .ep\:px-3 {
    padding-inline: calc(var(--ep-spacing) * 3);
  }
  .ep\:px-4 {
    padding-inline: calc(var(--ep-spacing) * 4);
  }
  .ep\:px-6 {
    padding-inline: calc(var(--ep-spacing) * 6);
  }
  .ep\:py-0\! {
    padding-block: calc(var(--ep-spacing) * 0) !important;
  }
  .ep\:py-0\.5 {
    padding-block: calc(var(--ep-spacing) * 0.5);
  }
  .ep\:py-1 {
    padding-block: calc(var(--ep-spacing) * 1);
  }
  .ep\:py-1\.5 {
    padding-block: calc(var(--ep-spacing) * 1.5);
  }
  .ep\:py-2 {
    padding-block: calc(var(--ep-spacing) * 2);
  }
  .ep\:py-3 {
    padding-block: calc(var(--ep-spacing) * 3);
  }
  .ep\:py-6 {
    padding-block: calc(var(--ep-spacing) * 6);
  }
  .ep\:pt-1 {
    padding-top: calc(var(--ep-spacing) * 1);
  }
  .ep\:text-center {
    text-align: center;
  }
  .ep\:text-left {
    text-align: left;
  }
  .ep\:text-base {
    font-size: var(--ep-text-base);
    line-height: var(--tw-leading, var(--ep-text-base--line-height));
  }
  .ep\:text-base\! {
    font-size: var(--ep-text-base) !important;
    line-height: var(--tw-leading, var(--ep-text-base--line-height)) !important;
  }
  .ep\:text-lg {
    font-size: var(--ep-text-lg);
    line-height: var(--tw-leading, var(--ep-text-lg--line-height));
  }
  .ep\:text-sm {
    font-size: var(--ep-text-sm);
    line-height: var(--tw-leading, var(--ep-text-sm--line-height));
  }
  .ep\:text-xs {
    font-size: var(--ep-text-xs);
    line-height: var(--tw-leading, var(--ep-text-xs--line-height));
  }
  .ep\:leading-none {
    --tw-leading: 1;
    line-height: 1;
  }
  .ep\:font-medium {
    --tw-font-weight: var(--ep-font-weight-medium);
    font-weight: var(--ep-font-weight-medium);
  }
  .ep\:font-normal {
    --tw-font-weight: var(--ep-font-weight-normal);
    font-weight: var(--ep-font-weight-normal);
  }
  .ep\:font-semibold {
    --tw-font-weight: var(--ep-font-weight-semibold);
    font-weight: var(--ep-font-weight-semibold);
  }
  .ep\:tracking-tight {
    --tw-tracking: var(--ep-tracking-tight);
    letter-spacing: var(--ep-tracking-tight);
  }
  .ep\:tracking-widest {
    --tw-tracking: var(--ep-tracking-widest);
    letter-spacing: var(--ep-tracking-widest);
  }
  .ep\:text-balance {
    text-wrap: balance;
  }
  .ep\:whitespace-nowrap {
    white-space: nowrap;
  }
  .ep\:text-accent-foreground {
    color: var(--accent-foreground);
  }
  .ep\:text-current {
    color: currentcolor;
  }
  .ep\:text-destructive {
    color: var(--destructive);
  }
  .ep\:text-destructive-light-foreground {
    color: var(--destructive-light-foreground);
  }
  .ep\:text-foreground {
    color: var(--foreground);
  }
  .ep\:text-foreground\! {
    color: var(--foreground) !important;
  }
  .ep\:text-info-light-foreground {
    color: var(--info-light-foreground);
  }
  .ep\:text-muted-foreground {
    color: var(--muted-foreground);
  }
  .ep\:text-muted-foreground\! {
    color: var(--muted-foreground) !important;
  }
  .ep\:text-neutral-foreground {
    color: var(--neutral-foreground);
  }
  .ep\:text-neutral-light-foreground {
    color: var(--neutral-light-foreground);
  }
  .ep\:text-popover-foreground {
    color: var(--popover-foreground);
  }
  .ep\:text-primary {
    color: var(--primary);
  }
  .ep\:text-primary-foreground {
    color: var(--primary-foreground);
  }
  .ep\:text-primary-light-foreground {
    color: var(--primary-light-foreground);
  }
  .ep\:text-primary-light-foreground\! {
    color: var(--primary-light-foreground) !important;
  }
  .ep\:text-secondary-foreground {
    color: var(--secondary-foreground);
  }
  .ep\:text-success-light-foreground {
    color: var(--success-light-foreground);
  }
  .ep\:text-warning-light-foreground {
    color: var(--warning-light-foreground);
  }
  .ep\:text-white {
    color: var(--ep-color-white);
  }
  .ep\:underline-offset-4 {
    text-underline-offset: 4px;
  }
  .ep\:opacity-0 {
    opacity: 0%;
  }
  .ep\:opacity-50 {
    opacity: 50%;
  }
  .ep\:opacity-50\! {
    opacity: 50% !important;
  }
  .ep\:opacity-70 {
    opacity: 70%;
  }
  .ep\:opacity-80 {
    opacity: 80%;
  }
  .ep\:opacity-100 {
    opacity: 100%;
  }
  .ep\:shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ep\:shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ep\:shadow-md\! {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1)) !important;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow) !important;
  }
  .ep\:shadow-none\! {
    --tw-shadow: 0 0 #0000 !important;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow) !important;
  }
  .ep\:shadow-xs {
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ep\:ring-1 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ep\:ring-ring {
    --tw-ring-color: var(--ring);
  }
  .ep\:ring-offset-background {
    --tw-ring-offset-color: var(--background);
  }
  .ep\:outline-hidden {
    --tw-outline-style: none;
    outline-style: none;
    @media (forced-colors: active) {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .ep\:transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--ep-default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--ep-default-transition-duration));
  }
  .ep\:transition-\[color\,box-shadow\] {
    transition-property: color,box-shadow;
    transition-timing-function: var(--tw-ease, var(--ep-default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--ep-default-transition-duration));
  }
  .ep\:transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--ep-default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--ep-default-transition-duration));
  }
  .ep\:transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--ep-default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--ep-default-transition-duration));
  }
  .ep\:transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--ep-default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--ep-default-transition-duration));
  }
  .ep\:transition-shadow {
    transition-property: box-shadow;
    transition-timing-function: var(--tw-ease, var(--ep-default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--ep-default-transition-duration));
  }
  .ep\:transition-none {
    transition-property: none;
  }
  .ep\:duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .ep\:duration-1000 {
    --tw-duration: 1000ms;
    transition-duration: 1000ms;
  }
  .ep\:ease-in-out {
    --tw-ease: var(--ep-ease-in-out);
    transition-timing-function: var(--ep-ease-in-out);
  }
  .ep\:animate-in {
    animation-name: enter;
    animation-duration: 150ms;
    --tw-enter-opacity: initial;
    --tw-enter-scale: initial;
    --tw-enter-rotate: initial;
    --tw-enter-translate-x: initial;
    --tw-enter-translate-y: initial;
  }
  .ep\:outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .ep\:select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .ep\:duration-200 {
    animation-duration: 200ms;
  }
  .ep\:duration-1000 {
    animation-duration: 1000ms;
  }
  .ep\:ease-in-out {
    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
  .ep\:fade-in-0 {
    --tw-enter-opacity: 0;
  }
  .ep\:zoom-in-95 {
    --tw-enter-scale: .95;
  }
  .ep\:group-data-\[disabled\=true\]\:pointer-events-none {
    &:is(:where(.ep\:group)[data-disabled="true"] *) {
      pointer-events: none;
    }
  }
  .ep\:group-data-\[disabled\=true\]\:opacity-50 {
    &:is(:where(.ep\:group)[data-disabled="true"] *) {
      opacity: 50%;
    }
  }
  .ep\:peer-disabled\:cursor-not-allowed {
    &:is(:where(.ep\:peer):disabled ~ *) {
      cursor: not-allowed;
    }
  }
  .ep\:peer-disabled\:opacity-50 {
    &:is(:where(.ep\:peer):disabled ~ *) {
      opacity: 50%;
    }
  }
  .ep\:peer-disabled\:opacity-70 {
    &:is(:where(.ep\:peer):disabled ~ *) {
      opacity: 70%;
    }
  }
  .ep\:selection\:bg-primary {
    & *::selection {
      background-color: var(--primary);
    }
    &::selection {
      background-color: var(--primary);
    }
  }
  .ep\:selection\:text-primary-foreground {
    & *::selection {
      color: var(--primary-foreground);
    }
    &::selection {
      color: var(--primary-foreground);
    }
  }
  .ep\:file\:inline-flex {
    &::file-selector-button {
      display: inline-flex;
    }
  }
  .ep\:file\:h-7 {
    &::file-selector-button {
      height: calc(var(--ep-spacing) * 7);
    }
  }
  .ep\:file\:border-0 {
    &::file-selector-button {
      border-style: var(--tw-border-style);
      border-width: 0px;
    }
  }
  .ep\:file\:bg-transparent {
    &::file-selector-button {
      background-color: transparent;
    }
  }
  .ep\:file\:text-sm {
    &::file-selector-button {
      font-size: var(--ep-text-sm);
      line-height: var(--tw-leading, var(--ep-text-sm--line-height));
    }
  }
  .ep\:file\:font-medium {
    &::file-selector-button {
      --tw-font-weight: var(--ep-font-weight-medium);
      font-weight: var(--ep-font-weight-medium);
    }
  }
  .ep\:file\:text-foreground {
    &::file-selector-button {
      color: var(--foreground);
    }
  }
  .ep\:placeholder\:text-muted-foreground {
    &::placeholder {
      color: var(--muted-foreground);
    }
  }
  .ep\:first\:rounded-l-md {
    &:first-child {
      border-top-left-radius: calc(var(--radius) - 2px);
      border-bottom-left-radius: calc(var(--radius) - 2px);
    }
  }
  .ep\:first\:border-l {
    &:first-child {
      border-left-style: var(--tw-border-style);
      border-left-width: 1px;
    }
  }
  .ep\:last\:rounded-r-md {
    &:last-child {
      border-top-right-radius: calc(var(--radius) - 2px);
      border-bottom-right-radius: calc(var(--radius) - 2px);
    }
  }
  .ep\:hover\:bg-accent {
    &:hover {
      @media (hover: hover) {
        background-color: var(--accent);
      }
    }
  }
  .ep\:hover\:bg-destructive-light\! {
    &:hover {
      @media (hover: hover) {
        background-color: var(--destructive-light) !important;
      }
    }
  }
  .ep\:hover\:bg-destructive\/90 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--destructive);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
        }
      }
    }
  }
  .ep\:hover\:bg-primary\/90 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--primary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--primary) 90%, transparent);
        }
      }
    }
  }
  .ep\:hover\:bg-secondary\/80 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--secondary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--secondary) 80%, transparent);
        }
      }
    }
  }
  .ep\:hover\:text-accent-foreground {
    &:hover {
      @media (hover: hover) {
        color: var(--accent-foreground);
      }
    }
  }
  .ep\:hover\:text-destructive-light-foreground\! {
    &:hover {
      @media (hover: hover) {
        color: var(--destructive-light-foreground) !important;
      }
    }
  }
  .ep\:hover\:underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .ep\:hover\:opacity-100 {
    &:hover {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .ep\:focus\:ring-2 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .ep\:focus\:ring-ring {
    &:focus {
      --tw-ring-color: var(--ring);
    }
  }
  .ep\:focus\:ring-offset-2 {
    &:focus {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .ep\:focus\:outline-hidden {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
  }
  .ep\:focus-visible\:border-ring {
    &:focus-visible {
      border-color: var(--ring);
    }
  }
  .ep\:focus-visible\:ring-\[3px\] {
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .ep\:focus-visible\:ring-destructive\/20 {
    &:focus-visible {
      --tw-ring-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
      }
    }
  }
  .ep\:focus-visible\:ring-ring\/50 {
    &:focus-visible {
      --tw-ring-color: var(--ring);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
      }
    }
  }
  .ep\:focus-visible\:outline-1 {
    &:focus-visible {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
  }
  .ep\:focus-visible\:outline-ring {
    &:focus-visible {
      outline-color: var(--ring);
    }
  }
  .ep\:disabled\:pointer-events-none {
    &:disabled {
      pointer-events: none;
    }
  }
  .ep\:disabled\:cursor-not-allowed {
    &:disabled {
      cursor: not-allowed;
    }
  }
  .ep\:disabled\:opacity-50 {
    &:disabled {
      opacity: 50%;
    }
  }
  .ep\:has-disabled\:opacity-50 {
    &:has(*:disabled) {
      opacity: 50%;
    }
  }
  .ep\:has-\[\>svg\]\:grid-cols-\[calc\(var\(--ep-spacing\)\*4\)_1fr\] {
    &:has(>svg) {
      grid-template-columns: calc(var(--ep-spacing) * 4) 1fr;
    }
  }
  .ep\:has-\[\>svg\]\:gap-x-3 {
    &:has(>svg) {
      column-gap: calc(var(--ep-spacing) * 3);
    }
  }
  .ep\:has-\[\>svg\]\:px-2\.5 {
    &:has(>svg) {
      padding-inline: calc(var(--ep-spacing) * 2.5);
    }
  }
  .ep\:has-\[\>svg\]\:px-3 {
    &:has(>svg) {
      padding-inline: calc(var(--ep-spacing) * 3);
    }
  }
  .ep\:has-\[\>svg\]\:px-4 {
    &:has(>svg) {
      padding-inline: calc(var(--ep-spacing) * 4);
    }
  }
  .ep\:aria-invalid\:border-destructive {
    &[aria-invalid="true"] {
      border-color: var(--destructive);
    }
  }
  .ep\:aria-invalid\:ring-destructive\/20 {
    &[aria-invalid="true"] {
      --tw-ring-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
      }
    }
  }
  .ep\:aria-selected\:bg-accent\/50 {
    &[aria-selected="true"] {
      background-color: var(--accent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--accent) 50%, transparent);
      }
    }
  }
  .ep\:aria-selected\:text-muted-foreground {
    &[aria-selected="true"] {
      color: var(--muted-foreground);
    }
  }
  .ep\:aria-selected\:opacity-30 {
    &[aria-selected="true"] {
      opacity: 30%;
    }
  }
  .ep\:aria-selected\:opacity-100 {
    &[aria-selected="true"] {
      opacity: 100%;
    }
  }
  .ep\:data-\[active\=true\]\:z-10 {
    &[data-active="true"] {
      z-index: 10;
    }
  }
  .ep\:data-\[active\=true\]\:border-ring {
    &[data-active="true"] {
      border-color: var(--ring);
    }
  }
  .ep\:data-\[active\=true\]\:ring-\[3px\] {
    &[data-active="true"] {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .ep\:data-\[active\=true\]\:ring-ring\/50 {
    &[data-active="true"] {
      --tw-ring-color: var(--ring);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
      }
    }
  }
  .ep\:data-\[active\=true\]\:aria-invalid\:border-destructive {
    &[data-active="true"] {
      &[aria-invalid="true"] {
        border-color: var(--destructive);
      }
    }
  }
  .ep\:data-\[active\=true\]\:aria-invalid\:ring-destructive\/20 {
    &[data-active="true"] {
      &[aria-invalid="true"] {
        --tw-ring-color: var(--destructive);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
        }
      }
    }
  }
  .ep\:data-\[disabled\=true\]\:pointer-events-none {
    &[data-disabled="true"] {
      pointer-events: none;
    }
  }
  .ep\:data-\[disabled\=true\]\:opacity-50 {
    &[data-disabled="true"] {
      opacity: 50%;
    }
  }
  .ep\:data-\[selected\=true\]\:bg-accent {
    &[data-selected="true"] {
      background-color: var(--accent);
    }
  }
  .ep\:data-\[selected\=true\]\:text-accent-foreground {
    &[data-selected="true"] {
      color: var(--accent-foreground);
    }
  }
  .ep\:data-\[side\=bottom\]\:slide-in-from-top-2 {
    &[data-side="bottom"] {
      --tw-enter-translate-y: -0.5rem;
    }
  }
  .ep\:data-\[side\=left\]\:slide-in-from-right-2 {
    &[data-side="left"] {
      --tw-enter-translate-x: 0.5rem;
    }
  }
  .ep\:data-\[side\=right\]\:slide-in-from-left-2 {
    &[data-side="right"] {
      --tw-enter-translate-x: -0.5rem;
    }
  }
  .ep\:data-\[side\=top\]\:slide-in-from-bottom-2 {
    &[data-side="top"] {
      --tw-enter-translate-y: 0.5rem;
    }
  }
  .ep\:\*\:data-\[slot\=alert-description\]\:text-destructive\/90 {
    :is(& > *) {
      &[data-slot="alert-description"] {
        color: var(--destructive);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--destructive) 90%, transparent);
        }
      }
    }
  }
  .ep\:\*\*\:data-\[slot\=command-input-wrapper\]\:h-12 {
    :is(& *) {
      &[data-slot="command-input-wrapper"] {
        height: calc(var(--ep-spacing) * 12);
      }
    }
  }
  .ep\:data-\[state\=active\]\:bg-primary {
    &[data-state="active"] {
      background-color: var(--primary);
    }
  }
  .ep\:data-\[state\=active\]\:text-primary-foreground {
    &[data-state="active"] {
      color: var(--primary-foreground);
    }
  }
  .ep\:data-\[state\=active\]\:shadow-sm {
    &[data-state="active"] {
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .ep\:data-\[state\=checked\]\:border-primary {
    &[data-state="checked"] {
      border-color: var(--primary);
    }
  }
  .ep\:data-\[state\=checked\]\:bg-primary {
    &[data-state="checked"] {
      background-color: var(--primary);
    }
  }
  .ep\:data-\[state\=checked\]\:text-primary-foreground {
    &[data-state="checked"] {
      color: var(--primary-foreground);
    }
  }
  .ep\:data-\[state\=closed\]\:duration-300 {
    &[data-state="closed"] {
      --tw-duration: 300ms;
      transition-duration: 300ms;
    }
  }
  .ep\:data-\[state\=closed\]\:animate-out {
    &[data-state="closed"] {
      animation-name: exit;
      animation-duration: 150ms;
      --tw-exit-opacity: initial;
      --tw-exit-scale: initial;
      --tw-exit-rotate: initial;
      --tw-exit-translate-x: initial;
      --tw-exit-translate-y: initial;
    }
  }
  .ep\:data-\[state\=closed\]\:duration-300 {
    &[data-state="closed"] {
      animation-duration: 300ms;
    }
  }
  .ep\:data-\[state\=closed\]\:fade-out-0 {
    &[data-state="closed"] {
      --tw-exit-opacity: 0;
    }
  }
  .ep\:data-\[state\=closed\]\:slide-out-to-bottom {
    &[data-state="closed"] {
      --tw-exit-translate-y: 0.25rem;
    }
  }
  .ep\:data-\[state\=closed\]\:slide-out-to-left {
    &[data-state="closed"] {
      --tw-exit-translate-x: -0.25rem;
    }
  }
  .ep\:data-\[state\=closed\]\:slide-out-to-right {
    &[data-state="closed"] {
      --tw-exit-translate-x: 0.25rem;
    }
  }
  .ep\:data-\[state\=closed\]\:slide-out-to-top {
    &[data-state="closed"] {
      --tw-exit-translate-y: -0.25rem;
    }
  }
  .ep\:data-\[state\=closed\]\:zoom-out-95 {
    &[data-state="closed"] {
      --tw-exit-scale: .95;
    }
  }
  .ep\:data-\[state\=open\]\:bg-secondary {
    &[data-state="open"] {
      background-color: var(--secondary);
    }
  }
  .ep\:data-\[state\=open\]\:duration-500 {
    &[data-state="open"] {
      --tw-duration: 500ms;
      transition-duration: 500ms;
    }
  }
  .ep\:data-\[state\=open\]\:animate-in {
    &[data-state="open"] {
      animation-name: enter;
      animation-duration: 150ms;
      --tw-enter-opacity: initial;
      --tw-enter-scale: initial;
      --tw-enter-rotate: initial;
      --tw-enter-translate-x: initial;
      --tw-enter-translate-y: initial;
    }
  }
  .ep\:data-\[state\=open\]\:duration-500 {
    &[data-state="open"] {
      animation-duration: 500ms;
    }
  }
  .ep\:data-\[state\=open\]\:fade-in-0 {
    &[data-state="open"] {
      --tw-enter-opacity: 0;
    }
  }
  .ep\:data-\[state\=open\]\:slide-in-from-bottom {
    &[data-state="open"] {
      --tw-enter-translate-y: 0.25rem;
    }
  }
  .ep\:data-\[state\=open\]\:slide-in-from-left {
    &[data-state="open"] {
      --tw-enter-translate-x: -0.25rem;
    }
  }
  .ep\:data-\[state\=open\]\:slide-in-from-right {
    &[data-state="open"] {
      --tw-enter-translate-x: 0.25rem;
    }
  }
  .ep\:data-\[state\=open\]\:slide-in-from-top {
    &[data-state="open"] {
      --tw-enter-translate-y: -0.25rem;
    }
  }
  .ep\:data-\[state\=open\]\:zoom-in-95 {
    &[data-state="open"] {
      --tw-enter-scale: .95;
    }
  }
  .ep\:sm\:w-dialog-md {
    @media (width >= 40rem) {
      width: 33%;
    }
  }
  .ep\:sm\:w-dialog-sm {
    @media (width >= 40rem) {
      width: 20%;
    }
  }
  .ep\:sm\:max-w-lg {
    @media (width >= 40rem) {
      max-width: var(--ep-container-lg);
    }
  }
  .ep\:sm\:max-w-sm {
    @media (width >= 40rem) {
      max-width: var(--ep-container-sm);
    }
  }
  .ep\:sm\:flex-row {
    @media (width >= 40rem) {
      flex-direction: row;
    }
  }
  .ep\:sm\:justify-end {
    @media (width >= 40rem) {
      justify-content: flex-end;
    }
  }
  .ep\:md\:w-dialog-lg {
    @media (width >= 48rem) {
      width: 50%;
    }
  }
  .ep\:md\:text-sm {
    @media (width >= 48rem) {
      font-size: var(--ep-text-sm);
      line-height: var(--tw-leading, var(--ep-text-sm--line-height));
    }
  }
  .ep\:md\:text-sm\! {
    @media (width >= 48rem) {
      font-size: var(--ep-text-sm) !important;
      line-height: var(--tw-leading, var(--ep-text-sm--line-height)) !important;
    }
  }
  .ep\:lg\:w-dialog-xl {
    @media (width >= 64rem) {
      width: 75%;
    }
  }
  .ep\:dark\:bg-input\/30 {
    &:where(.dark, .dark *) {
      background-color: var(--input);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--input) 30%, transparent);
      }
    }
  }
  .ep\:dark\:text-muted-foreground {
    &:where(.dark, .dark *) {
      color: var(--muted-foreground);
    }
  }
  .ep\:dark\:focus-visible\:ring-destructive\/40 {
    &:where(.dark, .dark *) {
      &:focus-visible {
        --tw-ring-color: var(--destructive);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
        }
      }
    }
  }
  .ep\:dark\:aria-invalid\:ring-destructive\/40 {
    &:where(.dark, .dark *) {
      &[aria-invalid="true"] {
        --tw-ring-color: var(--destructive);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
        }
      }
    }
  }
  .ep\:dark\:data-\[active\=true\]\:aria-invalid\:ring-destructive\/40 {
    &:where(.dark, .dark *) {
      &[data-active="true"] {
        &[aria-invalid="true"] {
          --tw-ring-color: var(--destructive);
          @supports (color: color-mix(in lab, red, red)) {
            --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
          }
        }
      }
    }
  }
  .ep\:dark\:data-\[state\=active\]\:border-input {
    &:where(.dark, .dark *) {
      &[data-state="active"] {
        border-color: var(--input);
      }
    }
  }
  .ep\:dark\:data-\[state\=active\]\:bg-input\/30 {
    &:where(.dark, .dark *) {
      &[data-state="active"] {
        background-color: var(--input);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--input) 30%, transparent);
        }
      }
    }
  }
  .ep\:dark\:data-\[state\=active\]\:text-primary-foreground {
    &:where(.dark, .dark *) {
      &[data-state="active"] {
        color: var(--primary-foreground);
      }
    }
  }
  .ep\:dark\:data-\[state\=checked\]\:bg-primary {
    &:where(.dark, .dark *) {
      &[data-state="checked"] {
        background-color: var(--primary);
      }
    }
  }
  .ep\:\[\&_\[cmdk-group-heading\]\]\:px-2 {
    & [cmdk-group-heading] {
      padding-inline: calc(var(--ep-spacing) * 2);
    }
  }
  .ep\:\[\&_\[cmdk-group-heading\]\]\:py-1\.5 {
    & [cmdk-group-heading] {
      padding-block: calc(var(--ep-spacing) * 1.5);
    }
  }
  .ep\:\[\&_\[cmdk-group-heading\]\]\:text-xs {
    & [cmdk-group-heading] {
      font-size: var(--ep-text-xs);
      line-height: var(--tw-leading, var(--ep-text-xs--line-height));
    }
  }
  .ep\:\[\&_\[cmdk-group-heading\]\]\:font-medium {
    & [cmdk-group-heading] {
      --tw-font-weight: var(--ep-font-weight-medium);
      font-weight: var(--ep-font-weight-medium);
    }
  }
  .ep\:\[\&_\[cmdk-group-heading\]\]\:text-muted-foreground {
    & [cmdk-group-heading] {
      color: var(--muted-foreground);
    }
  }
  .ep\:\[\&_\[cmdk-group\]\]\:px-2 {
    & [cmdk-group] {
      padding-inline: calc(var(--ep-spacing) * 2);
    }
  }
  .ep\:\[\&_\[cmdk-group\]\:not\(\[hidden\]\)_\~\[cmdk-group\]\]\:pt-0 {
    & [cmdk-group]:not([hidden]) ~[cmdk-group] {
      padding-top: calc(var(--ep-spacing) * 0);
    }
  }
  .ep\:\[\&_\[cmdk-input-wrapper\]_svg\]\:h-5 {
    & [cmdk-input-wrapper] svg {
      height: calc(var(--ep-spacing) * 5);
    }
  }
  .ep\:\[\&_\[cmdk-input-wrapper\]_svg\]\:w-5 {
    & [cmdk-input-wrapper] svg {
      width: calc(var(--ep-spacing) * 5);
    }
  }
  .ep\:\[\&_\[cmdk-input\]\]\:h-12 {
    & [cmdk-input] {
      height: calc(var(--ep-spacing) * 12);
    }
  }
  .ep\:\[\&_\[cmdk-item\]\]\:px-2 {
    & [cmdk-item] {
      padding-inline: calc(var(--ep-spacing) * 2);
    }
  }
  .ep\:\[\&_\[cmdk-item\]\]\:py-3 {
    & [cmdk-item] {
      padding-block: calc(var(--ep-spacing) * 3);
    }
  }
  .ep\:\[\&_\[cmdk-item\]_svg\]\:h-5 {
    & [cmdk-item] svg {
      height: calc(var(--ep-spacing) * 5);
    }
  }
  .ep\:\[\&_\[cmdk-item\]_svg\]\:w-5 {
    & [cmdk-item] svg {
      width: calc(var(--ep-spacing) * 5);
    }
  }
  .ep\:\[\&_p\]\:leading-relaxed {
    & p {
      --tw-leading: var(--ep-leading-relaxed);
      line-height: var(--ep-leading-relaxed);
    }
  }
  .ep\:\[\&_svg\]\:pointer-events-none {
    & svg {
      pointer-events: none;
    }
  }
  .ep\:\[\&_svg\]\:shrink-0 {
    & svg {
      flex-shrink: 0;
    }
  }
  .ep\:\[\&_svg\:not\(\[class\*\=size-\]\)\]\:size-4 {
    & svg:not([class*=size-]) {
      width: calc(var(--ep-spacing) * 4);
      height: calc(var(--ep-spacing) * 4);
    }
  }
  .ep\:\[\&_svg\:not\(\[class\*\=text-\]\)\]\:text-muted-foreground {
    & svg:not([class*=text-]) {
      color: var(--muted-foreground);
    }
  }
  .ep\:\[\&\>button\]\:bg-primary {
    &>button {
      background-color: var(--primary);
    }
  }
  .ep\:\[\&\>button\]\:bg-transparent {
    &>button {
      background-color: transparent;
    }
  }
  .ep\:\[\&\>button\]\:\!text-foreground {
    &>button {
      color: var(--foreground) !important;
    }
  }
  .ep\:\[\&\>button\]\:text-primary-foreground {
    &>button {
      color: var(--primary-foreground);
    }
  }
  .ep\:\[\&\>button\]\:hover\:bg-primary {
    &>button {
      &:hover {
        @media (hover: hover) {
          background-color: var(--primary);
        }
      }
    }
  }
  .ep\:\[\&\>button\]\:hover\:bg-transparent {
    &>button {
      &:hover {
        @media (hover: hover) {
          background-color: transparent;
        }
      }
    }
  }
  .ep\:\[\&\>button\]\:hover\:\!text-foreground {
    &>button {
      &:hover {
        @media (hover: hover) {
          color: var(--foreground) !important;
        }
      }
    }
  }
  .ep\:\[\&\>button\]\:hover\:text-primary-foreground {
    &>button {
      &:hover {
        @media (hover: hover) {
          color: var(--primary-foreground);
        }
      }
    }
  }
  .ep\:\[\&\>svg\]\:pointer-events-none {
    &>svg {
      pointer-events: none;
    }
  }
  .ep\:\[\&\>svg\]\:size-3 {
    &>svg {
      width: calc(var(--ep-spacing) * 3);
      height: calc(var(--ep-spacing) * 3);
    }
  }
  .ep\:\[\&\>svg\]\:size-4 {
    &>svg {
      width: calc(var(--ep-spacing) * 4);
      height: calc(var(--ep-spacing) * 4);
    }
  }
  .ep\:\[\&\>svg\]\:translate-y-0\.5 {
    &>svg {
      --tw-translate-y: calc(var(--ep-spacing) * 0.5);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .ep\:\[\&\>svg\]\:text-current {
    &>svg {
      color: currentcolor;
    }
  }
}
@layer base {
  * {
    border-color: var(--border);
    outline-color: var(--ring);
    @supports (color: color-mix(in lab, red, red)) {
      outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }
  body {
    background-color: var(--background);
    color: var(--foreground);
  }
}
.react-colorful {
  width: auto !important;
  height: auto !important;
}
.react-colorful__saturation {
  display: none !important;
}
.react-colorful__last-control {
  border-radius: 8px !important;
}
input::-webkit-outer-spin-button, input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
input[type="number"] {
  -moz-appearance: textfield;
}
input[type="time"]::-webkit-clear-button {
  display: none;
}
@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));
  }
}
@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@keyframes caret-blink {
  0%, 70%, 100% {
    opacity: 1;
  }
  20%, 50% {
    opacity: 0;
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-outline-style: solid;
    }
  }
}
