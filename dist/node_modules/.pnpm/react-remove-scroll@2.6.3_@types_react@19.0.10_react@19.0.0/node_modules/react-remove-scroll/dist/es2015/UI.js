var E = Object.defineProperty;
var d = (e, o) => E(e, "name", { value: o, configurable: !0 });
import { __rest as I, __assign as r } from "../../../../../tslib@2.8.1/node_modules/tslib/tslib.es6.js";
import * as a from "react";
import { zeroRightClassName as Z, fullWidthClassName as W } from "../../../../../react-remove-scroll-bar@2.3.8_@types_react@19.0.10_react@19.0.0/node_modules/react-remove-scroll-bar/dist/es2015/constants.js";
import { effectCar as z } from "./medium.js";
import { useMergeRefs as x } from "../../../../../use-callback-ref@1.3.3_@types_react@19.0.10_react@19.0.0/node_modules/use-callback-ref/dist/es2015/useMergeRef.js";
var l = /* @__PURE__ */ d(function() {
}, "nothing"), f = a.forwardRef(function(e, o) {
  var n = a.useRef(null), t = a.useState({
    onScrollCapture: l,
    onWheelCapture: l,
    onTouchMoveCapture: l
  }), h = t[0], u = t[1], v = e.forwardProps, s = e.children, C = e.className, g = e.removeScrollBar, P = e.enabled, R = e.shards, S = e.sideCar, b = e.noIsolation, w = e.inert, N = e.allowPinchZoom, i = e.as, M = i === void 0 ? "div" : i, _ = e.gapMode, B = I(e, ["forwardProps", "children", "className", "removeScrollBar", "enabled", "shards", "sideCar", "noIsolation", "inert", "allowPinchZoom", "as", "gapMode"]), k = S, c = x([n, o]), m = r(r({}, B), h);
  return a.createElement(
    a.Fragment,
    null,
    P && a.createElement(k, { sideCar: z, removeScrollBar: g, shards: R, noIsolation: b, inert: w, setCallbacks: u, allowPinchZoom: !!N, lockRef: n, gapMode: _ }),
    v ? a.cloneElement(a.Children.only(s), r(r({}, m), { ref: c })) : a.createElement(M, r({}, m, { className: C, ref: c }), s)
  );
});
f.defaultProps = {
  enabled: !0,
  removeScrollBar: !0,
  inert: !1
};
f.classNames = {
  fullWidth: W,
  zeroRight: Z
};
export {
  f as RemoveScroll
};
