var A = Object.defineProperty;
var l = (t, a) => A(t, "name", { value: a, configurable: !0 });
import { __spreadArray as I } from "../../../../../tslib@2.8.1/node_modules/tslib/tslib.es6.js";
import * as n from "react";
import { RemoveScrollBar as W } from "../../../../../react-remove-scroll-bar@2.3.8_@types_react@19.0.10_react@19.0.0/node_modules/react-remove-scroll-bar/dist/es2015/component.js";
import { nonPassive as f } from "./aggresiveCapture.js";
import { locationCouldBeScrolled as Y, handleScroll as p } from "./handleScroll.js";
import { styleSingleton as F } from "../../../../../react-style-singleton@2.2.3_@types_react@19.0.10_react@19.0.0/node_modules/react-style-singleton/dist/es2015/component.js";
var k = /* @__PURE__ */ l(function(t) {
  return "changedTouches" in t ? [t.changedTouches[0].clientX, t.changedTouches[0].clientY] : [0, 0];
}, "getTouchXY"), B = /* @__PURE__ */ l(function(t) {
  return [t.deltaX, t.deltaY];
}, "getDeltaXY"), M = /* @__PURE__ */ l(function(t) {
  return t && "current" in t ? t.current : t;
}, "extractRef"), K = /* @__PURE__ */ l(function(t, a) {
  return t[0] === a[0] && t[1] === a[1];
}, "deltaCompare"), O = /* @__PURE__ */ l(function(t) {
  return `
  .block-interactivity-`.concat(t, ` {pointer-events: none;}
  .allow-interactivity-`).concat(t, ` {pointer-events: all;}
`);
}, "generateStyle"), Q = 0, h = [];
function J(t) {
  var a = n.useRef([]), R = n.useRef([0, 0]), m = n.useRef(), v = n.useState(Q++)[0], g = n.useState(F)[0], S = n.useRef(t);
  n.useEffect(function() {
    S.current = t;
  }, [t]), n.useEffect(function() {
    if (t.inert) {
      document.body.classList.add("block-interactivity-".concat(v));
      var e = I([t.lockRef.current], (t.shards || []).map(M), !0).filter(Boolean);
      return e.forEach(function(r) {
        return r.classList.add("allow-interactivity-".concat(v));
      }), function() {
        document.body.classList.remove("block-interactivity-".concat(v)), e.forEach(function(r) {
          return r.classList.remove("allow-interactivity-".concat(v));
        });
      };
    }
  }, [t.inert, t.lockRef.current, t.shards]);
  var C = n.useCallback(function(e, r) {
    if ("touches" in e && e.touches.length === 2 || e.type === "wheel" && e.ctrlKey)
      return !S.current.allowPinchZoom;
    var i = k(e), o = R.current, u = "deltaX" in e ? e.deltaX : o[0] - i[0], s = "deltaY" in e ? e.deltaY : o[1] - i[1], c, E = e.target, d = Math.abs(u) > Math.abs(s) ? "h" : "v";
    if ("touches" in e && d === "h" && E.type === "range")
      return !1;
    var b = Y(d, E);
    if (!b)
      return !0;
    if (b ? c = d : (c = d === "v" ? "h" : "v", b = Y(d, E)), !b)
      return !1;
    if (!m.current && "changedTouches" in e && (u || s) && (m.current = c), !c)
      return !0;
    var T = m.current || c;
    return p(T, r, e, T === "h" ? u : s);
  }, []), y = n.useCallback(function(e) {
    var r = e;
    if (!(!h.length || h[h.length - 1] !== g)) {
      var i = "deltaY" in r ? B(r) : k(r), o = a.current.filter(function(c) {
        return c.name === r.type && (c.target === r.target || r.target === c.shadowParent) && K(c.delta, i);
      })[0];
      if (o && o.should) {
        r.cancelable && r.preventDefault();
        return;
      }
      if (!o) {
        var u = (S.current.shards || []).map(M).filter(Boolean).filter(function(c) {
          return c.contains(r.target);
        }), s = u.length > 0 ? C(r, u[0]) : !S.current.noIsolation;
        s && r.cancelable && r.preventDefault();
      }
    }
  }, []), w = n.useCallback(function(e, r, i, o) {
    var u = { name: e, delta: r, target: i, should: o, shadowParent: Z(i) };
    a.current.push(u), setTimeout(function() {
      a.current = a.current.filter(function(s) {
        return s !== u;
      });
    }, 1);
  }, []), L = n.useCallback(function(e) {
    R.current = k(e), m.current = void 0;
  }, []), P = n.useCallback(function(e) {
    w(e.type, B(e), e.target, C(e, t.lockRef.current));
  }, []), X = n.useCallback(function(e) {
    w(e.type, k(e), e.target, C(e, t.lockRef.current));
  }, []);
  n.useEffect(function() {
    return h.push(g), t.setCallbacks({
      onScrollCapture: P,
      onWheelCapture: P,
      onTouchMoveCapture: X
    }), document.addEventListener("wheel", y, f), document.addEventListener("touchmove", y, f), document.addEventListener("touchstart", L, f), function() {
      h = h.filter(function(e) {
        return e !== g;
      }), document.removeEventListener("wheel", y, f), document.removeEventListener("touchmove", y, f), document.removeEventListener("touchstart", L, f);
    };
  }, []);
  var D = t.removeScrollBar, x = t.inert;
  return n.createElement(
    n.Fragment,
    null,
    x ? n.createElement(g, { styles: O(v) }) : null,
    D ? n.createElement(W, { gapMode: t.gapMode }) : null
  );
}
l(J, "RemoveScrollSideCar");
function Z(t) {
  for (var a = null; t !== null; )
    t instanceof ShadowRoot && (a = t.host, t = t.host), t = t.parentNode;
  return a;
}
l(Z, "getOutermostShadowParent");
export {
  J as RemoveScrollSideCar,
  B as getDeltaXY,
  k as getTouchXY
};
