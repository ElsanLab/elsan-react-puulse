var o = Object.defineProperty;
var t = (n, e) => o(n, "name", { value: e, configurable: !0 });
import { buildLocalizeFn as r } from "../../_lib/buildLocalizeFn.js";
const u = {
  narrow: ["av. J.-C", "ap. J.-C"],
  abbreviated: ["av. J.-C", "ap. J.-C"],
  wide: ["avant Jésus-Christ", "après Jésus-Christ"]
}, s = {
  narrow: ["T1", "T2", "T3", "T4"],
  abbreviated: ["1er trim.", "2ème trim.", "3ème trim.", "4ème trim."],
  wide: ["1er trimestre", "2ème trimestre", "3ème trimestre", "4ème trimestre"]
}, l = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: [
    "janv.",
    "févr.",
    "mars",
    "avr.",
    "mai",
    "juin",
    "juil.",
    "août",
    "sept.",
    "oct.",
    "nov.",
    "déc."
  ],
  wide: [
    "janvier",
    "février",
    "mars",
    "avril",
    "mai",
    "juin",
    "juillet",
    "août",
    "septembre",
    "octobre",
    "novembre",
    "décembre"
  ]
}, v = {
  narrow: ["D", "L", "M", "M", "J", "V", "S"],
  short: ["di", "lu", "ma", "me", "je", "ve", "sa"],
  abbreviated: ["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."],
  wide: [
    "dimanche",
    "lundi",
    "mardi",
    "mercredi",
    "jeudi",
    "vendredi",
    "samedi"
  ]
}, c = {
  narrow: {
    am: "AM",
    pm: "PM",
    midnight: "minuit",
    noon: "midi",
    morning: "mat.",
    afternoon: "ap.m.",
    evening: "soir",
    night: "mat."
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "minuit",
    noon: "midi",
    morning: "matin",
    afternoon: "après-midi",
    evening: "soir",
    night: "matin"
  },
  wide: {
    am: "AM",
    pm: "PM",
    midnight: "minuit",
    noon: "midi",
    morning: "du matin",
    afternoon: "de l’après-midi",
    evening: "du soir",
    night: "du matin"
  }
}, h = /* @__PURE__ */ t((n, e) => {
  const a = Number(n), i = e == null ? void 0 : e.unit;
  if (a === 0) return "0";
  const d = ["year", "week", "hour", "minute", "second"];
  let m;
  return a === 1 ? m = i && d.includes(i) ? "ère" : "er" : m = "ème", a + m;
}, "ordinalNumber"), M = ["MMM", "MMMM"], g = {
  preprocessor: /* @__PURE__ */ t((n, e) => n.getDate() === 1 || !e.some(
    (i) => i.isToken && M.includes(i.value)
  ) ? e : e.map(
    (i) => i.isToken && i.value === "do" ? { isToken: !0, value: "d" } : i
  ), "preprocessor"),
  ordinalNumber: h,
  era: r({
    values: u,
    defaultWidth: "wide"
  }),
  quarter: r({
    values: s,
    defaultWidth: "wide",
    argumentCallback: /* @__PURE__ */ t((n) => n - 1, "argumentCallback")
  }),
  month: r({
    values: l,
    defaultWidth: "wide"
  }),
  day: r({
    values: v,
    defaultWidth: "wide"
  }),
  dayPeriod: r({
    values: c,
    defaultWidth: "wide"
  })
};
export {
  g as localize
};
