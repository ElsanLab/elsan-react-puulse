var b = Object.defineProperty;
var u = (t, l) => b(t, "name", { value: l, configurable: !0 });
function v(t) {
  return (l, c = {}) => {
    const n = l.match(t.matchPattern);
    if (!n) return null;
    const r = n[0], a = l.match(t.parsePattern);
    if (!a) return null;
    let e = t.valueCallback ? t.valueCallback(a[0]) : a[0];
    e = c.valueCallback ? c.valueCallback(e) : e;
    const h = l.slice(r.length);
    return { value: e, rest: h };
  };
}
u(v, "buildMatchPatternFn");
export {
  v as buildMatchPatternFn
};
