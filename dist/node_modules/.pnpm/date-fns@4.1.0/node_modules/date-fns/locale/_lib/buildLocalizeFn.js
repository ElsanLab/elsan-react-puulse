var n = Object.defineProperty;
var c = (t, d) => n(t, "name", { value: d, configurable: !0 });
function m(t) {
  return (d, e) => {
    const f = e != null && e.context ? String(e.context) : "standalone";
    let u;
    if (f === "formatting" && t.formattingValues) {
      const l = t.defaultFormattingWidth || t.defaultWidth, a = e != null && e.width ? String(e.width) : l;
      u = t.formattingValues[a] || t.formattingValues[l];
    } else {
      const l = t.defaultWidth, a = e != null && e.width ? String(e.width) : t.defaultWidth;
      u = t.values[a] || t.values[l];
    }
    const h = t.argumentCallback ? t.argumentCallback(d) : d;
    return u[h];
  };
}
c(m, "buildLocalizeFn");
export {
  m as buildLocalizeFn
};
