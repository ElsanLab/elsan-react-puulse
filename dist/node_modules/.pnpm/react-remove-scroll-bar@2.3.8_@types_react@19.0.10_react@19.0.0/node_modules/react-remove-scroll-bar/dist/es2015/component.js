var p = Object.defineProperty;
var i = (n, r) => p(n, "name", { value: r, configurable: !0 });
import * as u from "react";
import { noScrollbarsClassName as v, zeroRightClassName as l, fullWidthClassName as d, removedBarSizeVariable as m } from "./constants.js";
import { getGapWidth as b } from "./utils.js";
import { styleSingleton as h } from "../../../../../react-style-singleton@2.2.3_@types_react@19.0.10_react@19.0.0/node_modules/react-style-singleton/dist/es2015/component.js";
var x = h(), e = "data-scroll-locked", y = /* @__PURE__ */ i(function(n, r, o, t) {
  var a = n.left, g = n.top, f = n.right, c = n.gap;
  return o === void 0 && (o = "margin"), `
  .`.concat(v, ` {
   overflow: hidden `).concat(t, `;
   padding-right: `).concat(c, "px ").concat(t, `;
  }
  body[`).concat(e, `] {
    overflow: hidden `).concat(t, `;
    overscroll-behavior: contain;
    `).concat([
    r && "position: relative ".concat(t, ";"),
    o === "margin" && `
    padding-left: `.concat(a, `px;
    padding-top: `).concat(g, `px;
    padding-right: `).concat(f, `px;
    margin-left:0;
    margin-top:0;
    margin-right: `).concat(c, "px ").concat(t, `;
    `),
    o === "padding" && "padding-right: ".concat(c, "px ").concat(t, ";")
  ].filter(Boolean).join(""), `
  }
  
  .`).concat(l, ` {
    right: `).concat(c, "px ").concat(t, `;
  }
  
  .`).concat(d, ` {
    margin-right: `).concat(c, "px ").concat(t, `;
  }
  
  .`).concat(l, " .").concat(l, ` {
    right: 0 `).concat(t, `;
  }
  
  .`).concat(d, " .").concat(d, ` {
    margin-right: 0 `).concat(t, `;
  }
  
  body[`).concat(e, `] {
    `).concat(m, ": ").concat(c, `px;
  }
`);
}, "getStyles"), s = /* @__PURE__ */ i(function() {
  var n = parseInt(document.body.getAttribute(e) || "0", 10);
  return isFinite(n) ? n : 0;
}, "getCurrentUseCounter"), S = /* @__PURE__ */ i(function() {
  u.useEffect(function() {
    return document.body.setAttribute(e, (s() + 1).toString()), function() {
      var n = s() - 1;
      n <= 0 ? document.body.removeAttribute(e) : document.body.setAttribute(e, n.toString());
    };
  }, []);
}, "useLockAttribute"), w = /* @__PURE__ */ i(function(n) {
  var r = n.noRelative, o = n.noImportant, t = n.gapMode, a = t === void 0 ? "margin" : t;
  S();
  var g = u.useMemo(function() {
    return b(a);
  }, [a]);
  return u.createElement(x, { styles: y(g, !r, a, o ? "" : "!important") });
}, "RemoveScrollBar");
export {
  w as RemoveScrollBar,
  e as lockAttribute,
  S as useLockAttribute
};
