var s = Object.defineProperty;
var o = (t, e) => s(t, "name", { value: e, configurable: !0 });
import * as c from "react";
import { useCallbackRef as p } from "../../../../../@radix-ui_react-use-callback-ref@1.1.0_@types_react@19.0.10_react@19.0.0/node_modules/@radix-ui/react-use-callback-ref/dist/index.js";
function f(t, e = globalThis == null ? void 0 : globalThis.document) {
  const a = p(t);
  c.useEffect(() => {
    const n = /* @__PURE__ */ o((r) => {
      r.key === "Escape" && a(r);
    }, "handleKeyDown");
    return e.addEventListener("keydown", n, { capture: !0 }), () => e.removeEventListener("keydown", n, { capture: !0 });
  }, [a, e]);
}
o(f, "useEscapeKeydown");
export {
  f as useEscapeKeydown
};
