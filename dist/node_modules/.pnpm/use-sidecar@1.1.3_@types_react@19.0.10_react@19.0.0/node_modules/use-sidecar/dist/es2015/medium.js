var l = Object.defineProperty;
var n = (u, t) => l(u, "name", { value: t, configurable: !0 });
import { __assign as h } from "../../../../../tslib@2.8.1/node_modules/tslib/tslib.es6.js";
function m(u) {
  return u;
}
n(m, "ItoI");
function v(u, t) {
  t === void 0 && (t = m);
  var e = [], a = !1, s = {
    read: /* @__PURE__ */ n(function() {
      if (a)
        throw new Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");
      return e.length ? e[e.length - 1] : u;
    }, "read"),
    useMedium: /* @__PURE__ */ n(function(i) {
      var r = t(i, a);
      return e.push(r), function() {
        e = e.filter(function(f) {
          return f !== r;
        });
      };
    }, "useMedium"),
    assignSyncMedium: /* @__PURE__ */ n(function(i) {
      for (a = !0; e.length; ) {
        var r = e;
        e = [], r.forEach(i);
      }
      e = {
        push: /* @__PURE__ */ n(function(f) {
          return i(f);
        }, "push"),
        filter: /* @__PURE__ */ n(function() {
          return e;
        }, "filter")
      };
    }, "assignSyncMedium"),
    assignMedium: /* @__PURE__ */ n(function(i) {
      a = !0;
      var r = [];
      if (e.length) {
        var f = e;
        e = [], f.forEach(i), r = e;
      }
      var d = /* @__PURE__ */ n(function() {
        var o = r;
        r = [], o.forEach(i);
      }, "executeQueue"), c = /* @__PURE__ */ n(function() {
        return Promise.resolve().then(d);
      }, "cycle");
      c(), e = {
        push: /* @__PURE__ */ n(function(o) {
          r.push(o), c();
        }, "push"),
        filter: /* @__PURE__ */ n(function(o) {
          return r = r.filter(o), e;
        }, "filter")
      };
    }, "assignMedium")
  };
  return s;
}
n(v, "innerCreateMedium");
function M(u) {
  u === void 0 && (u = {});
  var t = v(null);
  return t.options = h({ async: !0, ssr: !1 }, u), t;
}
n(M, "createSidecarMedium");
export {
  M as createSidecarMedium
};
