var m = Object.defineProperty;
var c = (a, r) => m(a, "name", { value: r, configurable: !0 });
import * as i from "react";
import { assignRef as o } from "./assignRef.js";
import { useCallbackRef as h } from "./useRef.js";
var p = typeof window < "u" ? i.useLayoutEffect : i.useEffect, l = /* @__PURE__ */ new WeakMap();
function w(a, r) {
  var t = h(null, function(n) {
    return a.forEach(function(u) {
      return o(u, n);
    });
  });
  return p(function() {
    var n = l.get(t);
    if (n) {
      var u = new Set(n), f = new Set(a), s = t.current;
      u.forEach(function(e) {
        f.has(e) || o(e, null);
      }), f.forEach(function(e) {
        u.has(e) || o(e, s);
      });
    }
    l.set(t, a);
  }, [a]), t;
}
c(w, "useMergeRefs");
export {
  w as useMergeRefs
};
